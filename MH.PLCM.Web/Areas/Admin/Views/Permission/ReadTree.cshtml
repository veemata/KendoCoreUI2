@model MH.PLCM.Controllers.RolePermissionsDto
@{
    ViewData["Title"] = "Permission Tree";
}

<h1>ReadTree</h1>

<form asp-controller="Permission" asp-action="SavePermissions" method="post">
    <div class="demo-section k-content">
        @(Html.Kendo().TreeView()
                    .Name("permissions")
                .Checkboxes(chk=>chk.Name($"Chk{"id"}").CheckChildren(true))
                .BindTo((IEnumerable<TreeViewItemModel>)ViewBag.treeList)
                .Events(events => events
                    .Select("onSelect")
                    .Check("onChecked"))
                )
    </div>

    <input asp-for="@Model.SelectedRolesIds" value=""  />
    <button type="submit">Save</button>
</form>


<script type="text/javascript">

    function onSelect(e) {
        e.preventDefault();
        var checkbox = $(e.node).find(":checkbox");
        var checked = checkbox.prop("checked");
        checkbox.prop("checked", !checked);
        checkbox.change();
    }

    function onChecked() {
        var checkedNodes = [],
            treeView = $("#permissions").data("kendoTreeView"),
            message;

        checkedNodeIds(treeView.dataSource.view(), checkedNodes);

        if (checkedNodes.length > 0) {
            message = checkedNodes.join(";");
        }
        else {
            message = "";
        }

        $("#SelectedRolesIds").value = message;
        alert(message);
    }

    function checkedNodeIds(nodes, checkedNodes) {
        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].checked) {
                checkedNodes.push(nodes[i].id);
            }

            if (nodes[i].hasChildren) {
                checkedNodeIds(nodes[i].children.view(), checkedNodes);
            }
        }
    }

</script>


